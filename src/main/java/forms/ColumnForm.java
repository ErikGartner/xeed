/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmColumn.java
 *
 * Created on 2011-jan-23, 13:28:53
 */
package forms;

import xeed.Constants;
import xeed.Template;
import xeed.XEED;

import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Erik
 */
public class ColumnForm extends javax.swing.JFrame implements TableModelListener {

   private Vector jTableModel = new Vector(0, 2); // Model f√∂r tabellen
   private Vector jTableHeader = new Vector(0);
   private DefaultTableModel df;

   public ColumnForm() {

      initComponents();
      try {
         ArrayList<Image> images = new ArrayList(0);
         images.add(ImageIO.read(this.getClass().getResource("/icon.png")));
         images.add(ImageIO.read(this.getClass().getResource("/table_gear.png")));
         this.setIconImages(images);
      } catch (IOException e) {
      }
      df = (DefaultTableModel) tblColumns.getModel();
      LoadTemplates();
      LoadColumns();
      JustifyColumns();
      tblColumns.getModel().addTableModelListener(this);
   }

   public void LoadTemplates() {
      comboType.removeAllItems();
      for (int x = 0; x < XEED.templateDB.size(); x++) {
         comboType.addItem(XEED.templateDB.get(x));
      }
   }

   public void JustifyColumns() {

      tblColumns.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
      tblColumns.getColumnModel().getColumn(0).setResizable(false);
      tblColumns.getColumnModel().getColumn(0).setPreferredWidth(20);
      tblColumns.getColumnModel().getColumn(1).setPreferredWidth(tblColumns.getWidth() - 20);

   }

   public void UpdateColumns() {

      Template t = (Template) comboType.getSelectedItem();
      String keys[] = t.GetAllTemplateKeys();

      for (int x = 0; x < jTableModel.size(); x++) {

         Vector o = (Vector) jTableModel.get(x);
         t.SetColumnVisible(keys[x], (Boolean) o.get(0));

      }

      if (XEED.hwndMain.currentTemplate == t) {
         XEED.hwndMain.PurgeThenPrintCharacters();
      }
   }

   public void LoadColumns() {

      jTableModel.clear();
      if (comboType.getItemCount() == 0) {
         return;
      }

      Template t = (Template) comboType.getSelectedItem();
      String keys[] = t.GetAllTemplateKeys();
      String names[] = t.GetAllTemplateNames();

      for (int x = 0; x < keys.length; x++) {

         Vector o = new Vector(0);
         o.add(t.IsToShowColumn(keys[x]));
         o.add(names[x]);
         jTableModel.add(o);

      }

      df.fireTableDataChanged();

   }

   @Override
   public void tableChanged(TableModelEvent e) {
      if (e.getType() != TableModelEvent.UPDATE) {
         return;
      }

      if (e.getFirstRow() == TableModelEvent.HEADER_ROW) {
         return;
      }

      if (tblColumns.getRowCount() == 0) {
         return;
      }

      UpdateColumns();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      comboType = new javax.swing.JComboBox();
      jScrollPane1 = new javax.swing.JScrollPane();
      tblColumns = new javax.swing.JTable();

      setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
      setTitle("Column Manager");
      setLocationByPlatform(true);
      addWindowListener(new java.awt.event.WindowAdapter() {
         public void windowClosing(java.awt.event.WindowEvent evt) {
            formWindowClosing(evt);
         }
      });

      comboType.setName("comboType"); // NOI18N
      comboType.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            comboTypeActionPerformed(evt);
         }
      });

      jScrollPane1.setName("jScrollPane1"); // NOI18N

      jTableHeader.add("");
      jTableHeader.add("Column");
      tblColumns.setModel(new javax.swing.table.DefaultTableModel(jTableModel, jTableHeader) {

         Class[] types = new Class[] { java.lang.Boolean.class, Object.class, String.class };

         public Class getColumnClass(int columnIndex) {
            return types[columnIndex];
         }

         public boolean isCellEditable(int rowIndex, int mColIndex) {
            if (mColIndex != 0) {
               return false;
            } else {
               Template t = (Template) comboType.getSelectedItem();
               String keys[] = t.GetAllTemplateKeys();
               if (keys[rowIndex].equalsIgnoreCase(Constants.CHARACTER_NAME)) {
                  return false;
               } else {
                  return true;
               }
            }
         }
      });
      tblColumns.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
      tblColumns.setName("tblColumns"); // NOI18N
      tblColumns.setShowHorizontalLines(false);
      tblColumns.setShowVerticalLines(false);
      tblColumns.getTableHeader().setReorderingAllowed(false);
      tblColumns.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
         public void propertyChange(java.beans.PropertyChangeEvent evt) {
            tblColumnsPropertyChange(evt);
         }
      });
      jScrollPane1.setViewportView(tblColumns);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
            javax.swing.GroupLayout.Alignment.TRAILING,
            layout.createSequentialGroup()
                  .addContainerGap()
                  .addGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                              .addComponent(comboType, javax.swing.GroupLayout.Alignment.LEADING, 0, 216,
                                    Short.MAX_VALUE)
                              .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING,
                                    javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)).addContainerGap()));
      layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
            layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                  .addContainerGap()));

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      XEED.ReadWriteOptions(true);
      XEED.hwndColumns = null;
      super.dispose();
   }//GEN-LAST:event_formWindowClosing

   private void tblColumnsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblColumnsPropertyChange
   }//GEN-LAST:event_tblColumnsPropertyChange

   private void comboTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTypeActionPerformed
      LoadColumns();
   }//GEN-LAST:event_comboTypeActionPerformed

   /**
    * @param args the command line arguments
    */
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JComboBox comboType;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JTable tblColumns;
   // End of variables declaration//GEN-END:variables
}
